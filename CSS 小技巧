<---------------------------------1.  菜单按钮----------------------------->

<div class='menu'></div>

style{
  实现方式1.    利用border-style:double的特性实现
    .menu{
      height:7px; width:60px;
      border-top:21px double;   
      border-bottom:7px solid;
    }
  实现方式2.    利用伪元素实现
    .menu{
      height:7px; width:60px;
      background:green;
      position:relative;
    }
    .menu::after,.menu::before{
      height:7px; width:60px;
      position:absolute; left:"";
      content:"";
    }
    .menu::before{
      top:-28px;
      backgroud-color:red;
    }
    .menu::after{
      top:-14px;
      background-color:orange;
    }
  实现方式3.    利用padding 实现  (content-box 只在content区域上色)
    .menu{
       height:7px; width:60px;
       padding:7px 0;
       background-clip:content-box;
       border-top:7px solid red;
       background:orange;
       border-bottom:7px solid green;
    }
}

<---------------------------------2.  加号按钮----------------------------->

<div class="add"></div>

style{
    1.传统伪类 和 background 实现 
      .add{...}
    2.利用伪类和 borde 特性实现 
      .add{
        height:40px; width:40px;
        position:relative;
        color:#ccc;
        border:1px solid;
      }
      .add::before,.add:after{
        content:"";
        position:absolute;
      }
      .add::before{
          border-left:4px solid;
          height:20px;
          left:18px; top:10px;
       }
       .add::after{
          border-top:4px solid;
          width:20px;
          left:10px; top:18px;
       }
       .add:hover{
          color:blue;
       }
}


<---------------------------------3.  让背景图在右侧定位----------------------------->
<div class='backImg'></div>

style{
  .backImg{
      height:60px; width:200px;
      border-right:30px solid transparent;
      outline:1px solid;
      background-image:url('...');
      background-position:100% 20px;
  }
}


<---------------------------------4.  用border制作三角形等图形----------------------------->


<---------------------------------5.  用padding 实现白眼效果----------------------------->

<style>
		div{
			height: 100px;
			width: 100px;
			padding: 10px;
			border: 10px solid;
			background: currentColor;
			background-clip: content-box;
			border-radius: 50%;
		}
	</style>
<--------------------------------6.  头图布局和正方形----------------------------->
div{
  padding:50%;
  background:currentColor;
}



<---------------------------------7.  两列自适应等高布局----------------------------->
一般只需要一边适应另外一边

<div class='container'>
	<div class='left'></div>
	<div class='right'></div>
</div>
 
1.利用padding和margin实现	父元素 设置为 overflow:hidden 或 float 会撑起因为float子元素所失去的高度

.container{
  overflow:hidden;
}

.left,.right{
  padding-bottom:9999px;
  margin-bottom:-9999px;
}


2.利用border实现		（此处左边适应右边）
.container{
	border-left: 300px solid;
}
.left{
	width: 300px;
	float: left;
	margin-left: -300px;
}
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
